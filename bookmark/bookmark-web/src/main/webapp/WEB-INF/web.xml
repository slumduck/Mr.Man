<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>bookmark</display-name>
	<!-- 访问的首要由容器控制 -->
	<welcome-file-list>
	    <welcome-file>login.html</welcome-file>
	</welcome-file-list>
	
	<!-- classpath*:dispatcher-servlet.xml 将springMVC的xml在这里初始化会报错 -->
	<!-- classpath*:security.xml -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
        	  classpath*:applicationContext*.xml;
        	  classpath*:security.xml
       </param-value>
	</context-param>
	<!-- Character Encoding Filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>GzipFilter</filter-name>
		<filter-class>net.sf.ehcache.constructs.web.filter.GzipFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>GzipFilter</filter-name>
		<url-pattern>/resources/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>GzipFilter</filter-name>
		<url-pattern>/assets/*</url-pattern>
	</filter-mapping>
	<!-- 懒加载 SESSION 共享 -->
	<filter>
		<filter-name>lazyLoadingFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>lazyLoadingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--安全过滤 -->
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>springSecurityFilterChain</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    
    <!--解决缓冲泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!-- 装配 SPRING 的配置信息 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 启用 请求 作用域 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- Spring MVC DispatcherServlet 配置 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 
		      默认回到web-inf/目录下找[servlet-name]-servlet.xml,这样不用配置下面
		      如果是自定义文件名且web-inf目录下可指定加载
		 -->
		<init-param>
		   <param-name>contextConfigLocation</param-name>
		   <param-value>classpath*:dispatcher-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	 
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!--  
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/bookmark/*</url-pattern>
	</servlet-mapping>
	-->
	<!-- session 超时时间 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
</web-app>